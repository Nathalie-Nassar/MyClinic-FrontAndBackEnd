# Generated by Django 4.0.3 on 2022-04-05 20:57

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_patient', models.BooleanField(default=False, verbose_name='patient status')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('title', models.CharField(blank=True, choices=[('RC', 'Root Canal'), ('TE', 'Tooth Extraction'), ('PU', 'Pulpotomy'), ('BR', 'Bridge')], max_length=2, null=True)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('room_name', models.CharField(max_length=100, null=True)),
                ('_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('title', models.CharField(choices=[('Administartor', 'Administartor'), ('Dentist_Assistant', 'Dentist_Assistant'), ('Nurse', 'Nurse'), ('Secretary', 'Secretary')], max_length=100, null=True)),
                ('first_name', models.CharField(max_length=50, null=True)),
                ('last_name', models.CharField(max_length=50, null=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], default='O', max_length=2, null=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('phone_number', models.CharField(max_length=8, null=True)),
                ('_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('firstName', models.CharField(blank=True, max_length=100, null=True)),
                ('lastName', models.CharField(blank=True, max_length=100, null=True)),
                ('PhoneNumber', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('birthDate', models.DateField(blank=True, null=True)),
                ('address', models.CharField(max_length=50)),
                ('gender', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('OTHER', 'Other')], default='OTHER', max_length=20)),
                ('medicattions', models.BooleanField(default=False, null=True)),
                ('med_text', models.TextField(blank=True, null=True)),
                ('allergies', models.BooleanField(default=False, null=True)),
                ('allergies_text', models.TextField(blank=True, null=True)),
                ('E_firstName', models.CharField(blank=True, max_length=100, null=True)),
                ('E_lastName', models.CharField(blank=True, max_length=100, null=True)),
                ('E_contactNumber', models.CharField(blank=True, max_length=100, null=True)),
                ('_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('date', models.DateField(null=True)),
                ('time', models.TimeField(null=True)),
                ('_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('createdby', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('doctor', models.OneToOneField(default='Moh', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('operation', models.OneToOneField(default='Tooth Extraction', null=True, on_delete=django.db.models.deletion.CASCADE, to='doctordashboard.operation')),
                ('patient', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='doctordashboard.patient')),
                ('room', models.OneToOneField(default='Operation', null=True, on_delete=django.db.models.deletion.CASCADE, to='doctordashboard.room')),
            ],
        ),
        migrations.CreateModel(
            name='AfterVisitSummary',
            fields=[
                ('firstName', models.CharField(blank=True, max_length=100, null=True)),
                ('lastName', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('todayvisit', models.DateField(default=datetime.datetime.now)),
                ('nextvisit', models.DateField(default=datetime.datetime.now)),
                ('time', models.TimeField(default=django.utils.timezone.now)),
                ('med_text', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, default='/placeholder.png', null=True, upload_to='')),
                ('_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('operation', models.ManyToManyField(default='Tooth Extraction', to='doctordashboard.operation')),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='doctordashboard.patient')),
            ],
        ),
    ]
